{"version":3,"sources":["redux/tickets/actions.js","components/sidebar.jsx","components/tickets/info-line.jsx","components/tickets/item.jsx","components/tickets/list.jsx","components/tickets/sort.jsx","components/tickets/tickets.jsx","components/content.jsx","components/theme-btn.jsx","App.js","redux/tickets/reducer.js","redux/store.js","index.js"],"names":["URL","SET_SEARCH_ID","SET_TICKETS","SET_IS_LOADED","SORT_TICKETS","FILTER_TICKETS","setSearchId","id","type","fetchTickets","searchId","dispatch","fetch","then","res","json","data","setTickets","tickets","catch","finally","setIsLoaded","payload","Sidebar","useDispatch","React","useState","checkboxAll","setCheckboxAll","title","isChecked","value","checkboxes","setCheckboxes","handleClick","checkbox","newCheckboxes","map","item","useEffect","isAllChecked","every","activeValues","filter","SidebarWrap","CardContent","Typography","gutterBottom","variant","component","FormGroup","FormControlLabel","label","control","Checkbox","onClick","checked","index","styled","Card","TicketsInfoLine","origin","destination","date","stops","duration","currDate","Date","currDateHours","getHours","currDateMins","getMinutes","durationHours","Math","floor","durationMins","getCorrectNum","num","InfoLine","InfoItem","InfoTitle","InfoSubitle","mins","newMins","hours","getDestinationTime","length","getStops","join","div","TicketsItem","price","carrier","segments","TicketWrap","CardTop","Price","toString","replace","Logo","src","img","TicketsList","useSelector","state","currList","isLoaded","slice","ticket","NoData","Array","fill","_","CardLoading","height","Skeleton","TicketsSort","currentSort","setCurrentSort","e","target","sortType","ButtonGroup","size","fullWidth","Button","Tickets","TicketsWrap","Content","ContentWrap","ThemeBtn","changeTheme","isThemeDark","ThemeBtnWrap","Fab","color","App","setIsThemeDark","theme","createTheme","palette","mode","background","default","ThemeProvider","CssBaseline","Wrapper","Container","initialState","initialList","TicketsReducer","action","sortedTickets","sort","a","b","filteredTickets","checkSegmentStops","segmentNum","includes","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.935b5dce.chunk.js","sourcesContent":["const URL = 'https://front-test.beta.aviasales.ru'\r\n\r\nexport const SET_SEARCH_ID = 'SET_SEARCH_ID'\r\nexport const SET_TICKETS = 'SET_TICKETS'\r\nexport const SET_IS_LOADED = 'SET_IS_LOADED'\r\nexport const SORT_TICKETS = 'SORT_TICKETS'\r\nexport const FILTER_TICKETS = 'FILTER_TICKETS'\r\n\r\n// SearchId\r\nexport const fetchSearchId = () => {\r\n    return (dispatch) => {\r\n        fetch(`${URL}/search`)\r\n            .then(res => res.json())\r\n            .then(data => dispatch(setSearchId(data.searchId)))\r\n            .finally(() => dispatch(setIsLoaded(true)))\r\n    }\r\n}\r\n\r\nexport const setSearchId = (id) => ({\r\n    type: SET_SEARCH_ID,\r\n    id\r\n})\r\n\r\n// Tickets\r\nexport const fetchTickets = (searchId) => {\r\n    return (dispatch) => {\r\n        fetch(`${URL}/tickets?searchId=${searchId}`)\r\n            .then(res => res.json())\r\n            .then(data => dispatch(setTickets(data.tickets)))\r\n            .catch(() => dispatch(fetchTickets(searchId)))\r\n            .finally(() => dispatch(setIsLoaded(true)))\r\n    }\r\n}\r\n\r\nexport const setTickets = (tickets) => ({\r\n    type: SET_TICKETS,\r\n    tickets\r\n})\r\n\r\n// isLoaded\r\nexport const setIsLoaded = (payload) => ({\r\n    type: SET_IS_LOADED,\r\n    payload\r\n})\r\n\r\n// sort\r\nexport const sortTickets = (sortType) => ({\r\n    type: SORT_TICKETS,\r\n    sortType\r\n})\r\n\r\n// filter\r\nexport const filterTickets = (filter) => ({\r\n    type: FILTER_TICKETS,\r\n    filter\r\n})","import { Card, CardContent, Checkbox, FormControlLabel, FormGroup, Typography } from '@mui/material';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { filterTickets } from '../redux/tickets/actions';\r\n\r\nconst Sidebar = () => {\r\n  const dispatch = useDispatch()\r\n  const [checkboxAll, setCheckboxAll] = React.useState(true);\r\n  const [checkboxes, setCheckboxes] = React.useState([\r\n    {title: 'Без пересадок', isChecked: true, value: 0},\r\n    {title: '1 пересадка', isChecked: true, value: 1},\r\n    {title: '2 пересадки', isChecked: true, value: 2},\r\n    {title: '3 пересадки', isChecked: true, value: 3},\r\n  ]);\r\n\r\n  const handleClick = (checkbox) => {\r\n    let newCheckboxes = []\r\n\r\n    if(checkbox.title === 'Все'){\r\n      newCheckboxes = checkboxes.map(item => ({...item, isChecked: !checkboxAll}))\r\n      setCheckboxAll(!checkboxAll)\r\n    }else {\r\n      newCheckboxes = checkboxes.map(item => (\r\n        item.title === checkbox.title\r\n          ? {...item, isChecked: !item.isChecked}\r\n          : {...item}\r\n      ))\r\n    } \r\n    setCheckboxes(newCheckboxes)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    const isAllChecked = checkboxes.every(item=>item.isChecked)\r\n    setCheckboxAll(isAllChecked)\r\n\r\n    const activeValues = checkboxes\r\n      .filter(item => item.isChecked)\r\n      .map(item => item.value)\r\n    dispatch(filterTickets(activeValues))\r\n  }, [checkboxes])\r\n\r\n  return (\r\n    <SidebarWrap>\r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h6\" component=\"div\">\r\n          Количество пересадок\r\n        </Typography>\r\n        <FormGroup>\r\n          <FormControlLabel\r\n            label='Все'\r\n            control={\r\n              <Checkbox \r\n              onClick={() => handleClick({title:'Все', isChecked: checkboxAll})} \r\n              checked={checkboxAll}\r\n              />\r\n            }\r\n            />\r\n          {checkboxes.map((checkbox, index) => (\r\n            <FormControlLabel\r\n            key={index}\r\n            label={checkbox.title}\r\n            control={\r\n              <Checkbox \r\n              onClick={() => handleClick(checkbox)} \r\n              checked={checkbox.isChecked}\r\n              />\r\n            }\r\n            />\r\n          ))}\r\n        </FormGroup>\r\n      </CardContent>\r\n    </SidebarWrap>\r\n    );\r\n};\r\n\r\nexport default Sidebar;\r\n\r\nconst SidebarWrap = styled(Card)`\r\n  max-width: 275px;\r\n  min-width: 195px;\r\n  width: 100%;\r\n  user-select: none;\r\n  @media (max-width: 680px) {\r\n    max-width: 100%;\r\n  }\r\n`\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TicketsInfoLine = ({origin, destination, date, stops, duration}) => {\r\n  const currDate = new Date(date)\r\n  const currDateHours = currDate.getHours()\r\n  const currDateMins = currDate.getMinutes()\r\n  const durationHours = Math.floor(duration / 60)\r\n  const durationMins = duration % 60\r\n\r\n  const getCorrectNum = (num) => num < 10 ? `0${num}` : num\r\n\r\n  const getStops = () => {\r\n    switch (stops.length) {\r\n      case 1:\r\n        return ' пересадка'\r\n      case 2:\r\n      case 3:\r\n        return ' пересадки'\r\n      default:\r\n        return 'без пересадок'\r\n    }\r\n  }\r\n\r\n  const getDestinationTime = () => {\r\n    const mins = currDateMins + durationMins\r\n    const newMins = mins >= 60 ? mins % 60 : mins\r\n\r\n    const hours = currDateHours + durationHours + Math.floor(mins / 60)\r\n    const newHours = hours >= 24 ? hours % 24 : hours\r\n\r\n    return `${getCorrectNum(newHours)}:${getCorrectNum(newMins)}`\r\n  }\r\n\r\n  return (\r\n    <InfoLine>\r\n        <InfoItem>\r\n          <InfoTitle>{origin} - {destination}</InfoTitle>\r\n          <InfoSubitle>\r\n          {getCorrectNum(currDateHours)}:{getCorrectNum(currDateMins)} \r\n          {' - '}\r\n          {getDestinationTime()} \r\n          </InfoSubitle>\r\n        </InfoItem>\r\n\r\n        <InfoItem>\r\n          <InfoTitle>В пути</InfoTitle>\r\n          <InfoSubitle>\r\n            {`${getCorrectNum(durationHours)}ч ${getCorrectNum(durationMins)}м`}\r\n          </InfoSubitle>\r\n        </InfoItem>\r\n\r\n        <InfoItem>\r\n          <InfoTitle>\r\n            {stops.length ? stops.length : ''}\r\n            {getStops()}\r\n          </InfoTitle>\r\n          <InfoSubitle>{stops.join(' ')}</InfoSubitle>\r\n        </InfoItem>\r\n      </InfoLine>\r\n  );\r\n};\r\n\r\nexport default TicketsInfoLine;\r\n\r\nconst InfoLine = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  @media (max-width: 350px) {\r\n    grid-template-columns: 1fr 60px 1fr;\r\n  }\r\n`\r\n\r\nconst InfoItem = styled.div`\r\n  margin-top: 10px;\r\n  font-weight: 600;\r\n  @media (max-width: 450px) {\r\n    font-size: 12px;\r\n    margin-right: 5px;\r\n  }\r\n`\r\n\r\nconst InfoTitle = styled.div`\r\n  color: #a0b0b9;\r\n`\r\n\r\nconst InfoSubitle = styled.div``\r\n","import { Card, Typography } from '@mui/material';\r\nimport React from 'react';\r\nimport styled from 'styled-components'\r\nimport TicketsInfoLine from './info-line';\r\n\r\nconst TicketsItem = ({price, carrier, segments}) => {\r\n  const changeNumFormat = (num) => {\r\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\r\n  }\r\n\r\n  return (\r\n    <TicketWrap>\r\n      <CardTop>\r\n        <Price variant=\"h5\">\r\n          {changeNumFormat(price)} Р\r\n        </Price>\r\n        <div></div>\r\n        <Logo src={`//pics.avs.io/99/36/${carrier}.png`}/>\r\n      </CardTop>\r\n      <TicketsInfoLine {...segments[0]}/>\r\n      <TicketsInfoLine {...segments[1]}/>\r\n    </TicketWrap>\r\n  );\r\n};\r\n\r\nexport default TicketsItem;\r\n\r\nconst CardTop = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  @media (max-width: 400px) {\r\n    grid-template-columns: 3fr 1fr 3fr;\r\n  }\r\n`\r\n\r\nconst Price = styled(Typography)`\r\n  color: #2196f3;\r\n`\r\n\r\nconst Logo = styled.img``\r\n\r\nconst TicketWrap = styled(Card)`\r\n  padding: 25px;\r\n  margin-top: 20px;\r\n  min-width: 440px;\r\n  @media (max-width: 470px) {\r\n    min-width: 290px;\r\n  }\r\n`\r\n","import React from 'react';\r\nimport TicketsItem from './item';\r\nimport {fetchSearchId, fetchTickets} from '../../redux/tickets/actions'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { Skeleton } from '@mui/material';\r\nimport styled from 'styled-components';\r\n\r\nconst TicketsList = () => {\r\n  const dispatch = useDispatch()\r\n  const {searchId, currList: tickets, isLoaded} = useSelector(state => state.tickets)\r\n\r\n  React.useEffect(() => {\r\n    dispatch(fetchSearchId())\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    if(searchId) dispatch(fetchTickets(searchId))\r\n  }, [searchId])\r\n\r\n  return (\r\n    <>\r\n      {\r\n        isLoaded\r\n        ? tickets.length\r\n          ? tickets.slice(0, 5).map((ticket, index) => (\r\n          <TicketsItem key={index} {...ticket}/>\r\n          ))\r\n          : <NoData>Tickets not found</NoData>\r\n        : new Array(5).fill(0).map((_, index) => (\r\n          <CardLoading key={index} variant=\"rectangular\" height={202}/>\r\n        ))\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TicketsList;\r\n\r\nconst CardLoading = styled(Skeleton)`\r\n  margin-top: 20px;\r\n  border-radius: 5px;\r\n`\r\n\r\nconst NoData = styled.div`\r\n  width: 100%;\r\n  height: 200px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`","import { Button, ButtonGroup } from '@mui/material';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { sortTickets } from '../../redux/tickets/actions';\r\n\r\nconst TicketsSort = () => {\r\n  const [currentSort, setCurrentSort] = React.useState('price');\r\n  const dispatch = useDispatch()\r\n  const tickets = useSelector(state => state.tickets.currList)\r\n\r\n  const handleClick = (e) => {\r\n    setCurrentSort(e.target.value);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    dispatch(sortTickets(currentSort))\r\n  }, [currentSort, tickets.length]);\r\n  \r\n  return (\r\n    <ButtonGroup variant=\"outlined\" size='large' fullWidth>\r\n        <Button onClick={handleClick} value='price' variant={currentSort === 'price' ? 'contained' : 'outlined'}>\r\n          Самый дешёвый\r\n        </Button>\r\n        <Button onClick={handleClick} value='speed' variant={currentSort === 'speed' ? 'contained' : 'outlined'}>\r\n          Самый быстрый\r\n        </Button>\r\n    </ButtonGroup>\r\n  );\r\n};\r\n\r\nexport default TicketsSort;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport TicketsList from './list';\r\nimport TicketsSort from './sort';\r\n\r\nconst Tickets = () => {\r\n  return (\r\n    <TicketsWrap>\r\n      <TicketsSort />\r\n      <TicketsList />\r\n    </TicketsWrap>\r\n  );\r\n};\r\n\r\nexport default Tickets;\r\n\r\nconst TicketsWrap = styled.div`\r\n  width: 100%;\r\n`\r\n","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport Sidebar from './sidebar';\r\nimport Tickets from './tickets/tickets';\r\n\r\n\r\nconst Content = () => {\r\n  return (\r\n    <ContentWrap>\r\n      <Sidebar />\r\n      <Tickets />\r\n    </ContentWrap>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n\r\nconst ContentWrap = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  gap: 1rem;\r\n  margin-bottom: 50px;\r\n  @media (max-width: 680px) {\r\n    flex-wrap: wrap;\r\n  }\r\n`\r\n","import React from 'react';\r\nimport WbSunnyIcon from '@mui/icons-material/WbSunny';\r\nimport Brightness3Icon from '@mui/icons-material/Brightness3';\r\nimport { Fab } from '@mui/material';\r\nimport styled from \"styled-components\";\r\n\r\nconst ThemeBtn = ({changeTheme, isThemeDark}) => {\r\n  return (\r\n    <ThemeBtnWrap>\r\n        <Fab color=\"primary\" onClick={changeTheme}>\r\n        {isThemeDark ? <WbSunnyIcon /> : <Brightness3Icon />}\r\n        </Fab>\r\n    </ThemeBtnWrap>\r\n  );\r\n};\r\n\r\nexport default ThemeBtn;\r\n\r\nconst ThemeBtnWrap = styled.div`\r\n  width: 56px;\r\n  margin: 75px auto;\r\n` \r\n","import React from 'react';\nimport Content from \"./components/content\";\nimport styled from \"styled-components\";\nimport { createTheme, CssBaseline, ThemeProvider } from \"@mui/material\";\nimport ThemeBtn from './components/theme-btn';\n\nfunction App() {\n  const [isThemeDark, setIsThemeDark] = React.useState(true);\n\n  const changeTheme = () => {\n    setIsThemeDark(!isThemeDark)\n  }\n\n  const theme = createTheme({\n    palette: {\n      mode: isThemeDark ? 'dark' : 'light',\n      background: {\n        default:  isThemeDark ? '#121212' : '#f3f7fa'\n      }\n    },\n    \n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Wrapper>\n        <Container>\n          <ThemeBtn changeTheme={changeTheme} isThemeDark={isThemeDark}/>\n          <Content />\n        </Container>\n      </Wrapper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n\nconst Container = styled.div`\n  max-width: 800px;\n  width: 100%;\n  padding: 0 15px;\n  margin: 0 auto;\n`\n\nconst Wrapper = styled.div`\n  width: 100vw;\n`\n","import { FILTER_TICKETS, SET_IS_LOADED, SET_SEARCH_ID, SET_TICKETS, SORT_TICKETS } from \"./actions\"\r\n\r\nconst initialState = {\r\n    searchId: '',\r\n    isLoaded: false,\r\n    initialList: [],\r\n    currList: []\r\n}\r\n\r\nconst TicketsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TICKETS:\r\n            return {\r\n                ...state,\r\n                initialList: action.tickets,\r\n                currList: action.tickets\r\n            }\r\n        case SET_IS_LOADED:\r\n            return {\r\n                ...state,\r\n                isLoaded: action.payload\r\n            }\r\n        case SET_SEARCH_ID:\r\n            return {\r\n                ...state,\r\n                searchId: action.id\r\n            }\r\n        case SORT_TICKETS: {\r\n            let sortedTickets = [...state.currList]\r\n            if(action.sortType === 'price'){\r\n                sortedTickets.sort((a,b) => a.price - b.price)\r\n            }\r\n            if(action.sortType === 'speed'){\r\n                sortedTickets.sort((a,b) => {\r\n                    const totalDurationA = a.segments[0].duration + a.segments[1].duration\r\n                    const totalDurationB = b.segments[0].duration + b.segments[1].duration\r\n\r\n                    return totalDurationA - totalDurationB\r\n                })\r\n            }\r\n            return {\r\n                ...state,\r\n                currList: sortedTickets\r\n            }\r\n        }\r\n        case FILTER_TICKETS: {\r\n            const filteredTickets = [...state.initialList].filter(ticket => {\r\n                const checkSegmentStops = (segmentNum) => {\r\n                    return action.filter.includes(ticket.segments[segmentNum].stops.length)\r\n                }\r\n                return checkSegmentStops(0) && checkSegmentStops(1)\r\n            })\r\n            return {\r\n                ...state,\r\n                currList: filteredTickets\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default TicketsReducer","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport TicketsReducer from \"./tickets/reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    tickets: TicketsReducer\r\n})\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}